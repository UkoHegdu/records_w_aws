version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_secure_password_here
      POSTGRES_DB: mapper_alerts
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Node.js Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PGUSER: postgres
      PGPASSWORD: your_secure_password_here
      PGDATABASE: mapper_alerts
      PGHOST: postgres  # Uses Docker's internal DNS
      PGPORT: 5432
      EMAIL_USER: your_email@example.com  # Consider using AWS SES instead
      EMAIL_PASS: your_email_password
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: unless-stopped

  # Frontend (React/Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pg_data: